stages:
  - build
  - test
  - deploy

# ---------------- BUILD STAGE ----------------
build_job:
  stage: build
  image: postgres:15
  script:
    - echo " Starting build stage..." | tee build_log.txt
    - echo "Validating SQL file presence..."
    - ls -l *.sql
    - echo " SQL files ready for processing." | tee -a build_log.txt
  artifacts:
    paths:
      - build_log.txt
    expire_in: 1 week
  only:
    changes:
      - "*.sql"
      - "README.md"

# ---------------- TEST STAGE ----------------
test_job:
  stage: test
  image: postgres:15
  services:
    - name: postgres:15
      alias: db
  variables:
    POSTGRES_USER: test
    POSTGRES_PASSWORD: test
    POSTGRES_DB: testdb
    PGPASSWORD: test       #  ensures psql uses password automatically
  script:
    - echo " Running schema and data tests..." | tee test_log.txt

    # Load schema & data
    - psql -h db -U test -d testdb -f Department.sql
    - psql -h db -U test -d testdb -f Employees.sql

    #  Assertions
    - echo " Checking row counts..."
    - 'test $(psql -h db -U test -d testdb -t -c "SELECT COUNT(*) FROM DEPARTMENT;") -eq 12'
    - 'test $(psql -h db -U test -d testdb -t -c "SELECT COUNT(*) FROM EMPLOYEE;") -eq 12'

    - echo " Checking constraints..."
    - 'test $(psql -h db -U test -d testdb -t -c "SELECT COUNT(*) FROM EMPLOYEE WHERE EMP_NAME IS NULL;") -eq 0'
    - 'test $(psql -h db -U test -d testdb -t -c "SELECT COUNT(*) FROM EMPLOYEE e LEFT JOIN DEPARTMENT d ON e.DEPT_ID=d.DEPT_ID WHERE d.DEPT_ID IS NULL;") -eq 0'
    - 'test $(psql -h db -U test -d testdb -t -c "SELECT COUNT(*) FROM EMPLOYEE WHERE SALARY <= 0;") -eq 0'
    - 'test $(psql -h db -U test -d testdb -t -c "SELECT COUNT(*) FROM (SELECT DEPT_NAME, COUNT(*) FROM DEPARTMENT GROUP BY DEPT_NAME HAVING COUNT(*) > 1) sub;") -eq 0'

  artifacts:
    paths:
      - test_log.txt
    expire_in: 1 week
  needs:
    - build_job
  only:
    changes:
      - "*.sql"

# ---------------- DEPLOY STAGE (UAT) ----------------
deploy_uat:
  stage: deploy
  image: postgres:15
  variables:
    POSTGRES_USER: uat_user
    POSTGRES_PASSWORD: uat_pass
    POSTGRES_DB: uatdb
    PGPASSWORD: uat_pass
  script:
    - echo " Deploying to UAT environment..." | tee deploy_log.txt
    - psql -h db -U uat_user -d uatdb -f Department.sql
    - psql -h db -U uat_user -d uatdb -f Employees.sql
  artifacts:
    paths:
      - deploy_log.txt
    expire_in: 1 week
  needs:
    - test_job
  only:
    refs:
      - main

# ---------------- DEPLOY STAGE (PROD) ----------------
deploy_prod:
  stage: deploy
  image: postgres:15
  variables:
    POSTGRES_USER: prod_user
    POSTGRES_PASSWORD: prod_pass
    POSTGRES_DB: proddb
    PGPASSWORD: prod_pass
  script:
    - echo " Deploying to PROD environment..." | tee deploy_prod_log.txt
    - psql -h db -U prod_user -d proddb -f Department.sql
    - psql -h db -U prod_user -d proddb -f Employees.sql
  artifacts:
    paths:
      - deploy_prod_log.txt
    expire_in: 1 week
  needs:
    - deploy_uat
  only:
    refs:
      - main
  when: manual     #  PROD requires manual approval
  allow_failure: false
